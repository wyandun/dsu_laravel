# GitLab CI/CD - Imagen con Composer Preinstalado
image: composer:2.6

variables:
  MYSQL_DATABASE: testing
  MYSQL_ROOT_PASSWORD: testing
  MYSQL_USER: testing
  MYSQL_PASSWORD: testing
  GIT_SSL_NO_VERIFY: "true"

services:
  - mysql:8.0

cache:
  key: ${CI_COMMIT_REF_SLUG}
  paths:
    - vendor/

stages:
  - test

before_script:
  # Configurar SSL
  - git config --global http.sslVerify false
  - export GIT_SSL_NO_VERIFY=true
  - composer config --global disable-tls true || true
  - composer config --global secure-http false || true
  
  # Instalar PHP y extensiones necesarias
  - apk add --no-cache php82-pdo_mysql php82-zip php82-gd mysql-client
  
  # Configurar entorno
  - cp .env.example .env
  - echo "DB_CONNECTION=mysql" >> .env
  - echo "DB_HOST=mysql" >> .env
  - echo "DB_DATABASE=testing" >> .env
  - echo "DB_USERNAME=testing" >> .env
  - echo "DB_PASSWORD=testing" >> .env

test_with_composer_image:
  stage: test
  script:
    - echo "ðŸ§ª Testing with Composer image..."
    
    # Instalar dependencias
    - composer install --no-ansi --no-interaction --optimize-autoloader
    
    # Configurar Laravel
    - php artisan key:generate
    
    # Esperar a que MySQL estÃ© listo
    - until mysql -h mysql -u testing -ptesting -e "SELECT 1"; do sleep 1; done
    
    # Ejecutar migraciones y tests
    - php artisan migrate --force
    - php artisan test
  
  artifacts:
    paths:
      - vendor/
    when: always
